@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import VT323 for the authentic MGS codec look */
@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');

/* Variables for the codec colors to ensure consistency */
:root {
  --codec-dark: #0f1e0f;
  --codec-darker: #071207;
  --codec-mid: #8bac0f;
  --codec-light: #b5d44a;
  --codec-highlight: #eaff4c;
}

@layer base {
  * {
    @apply border-codec-mid;
  }

  body {
    @apply bg-black text-codec-light;
    font-family: 'VT323', monospace;
    line-height: 1.5;
    cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Ccircle cx='8' cy='8' r='6' stroke='%238bac0f' stroke-width='2' fill='none'/%3E%3Ccircle cx='8' cy='8' r='2' fill='%238bac0f'/%3E%3C/svg%3E"), auto;
  }
  
  /* All elements with font-mono will use VT323 */
  .font-mono {
    font-family: 'VT323', monospace;
    letter-spacing: 0.5px;
  }
  
  /* Buttons and interactive elements get a custom cursor */
  button, a, [role="button"], input, select {
    cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Ccircle cx='8' cy='8' r='6' stroke='%23eaff4c' stroke-width='2' fill='none'/%3E%3Ccircle cx='8' cy='8' r='2' fill='%23eaff4c'/%3E%3C/svg%3E"), pointer;
  }
}

@layer components {
  /* MGS2-style Background */
  .hexagonal-bg {
    @apply bg-codec-darker;
    background-image: 
      /* Horizontal and vertical grid lines */
      linear-gradient(to right, rgba(139, 172, 15, 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(139, 172, 15, 0.05) 1px, transparent 1px),
      /* Diagonal lines for more authenticity */
      linear-gradient(45deg, rgba(139, 172, 15, 0.03) 25%, transparent 25%),
      linear-gradient(-45deg, rgba(139, 172, 15, 0.03) 25%, transparent 25%);
    background-size: 20px 20px, 20px 20px, 40px 40px, 40px 40px;
    position: relative;
  }
  
  /* Add vignette effect to the background like in MGS2 */
  .hexagonal-bg::before {
    content: "";
    position: absolute;
    inset: 0;
    background: radial-gradient(circle at center, transparent 30%, rgba(7, 18, 7, 0.8) 100%);
    pointer-events: none;
  }
  
  /* Scanline Effect */
  .scanline::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(15, 56, 15, 0.1) 51%,
      transparent 51%
    );
    background-size: 100% 4px;
    pointer-events: none;
    z-index: 20;
  }
  
  /* CRT Effect */
  .crt-effect {
    position: relative;
    overflow: hidden;
    box-shadow: inset 0 0 150px rgba(15, 56, 15, 0.5);
  }
  
  .crt-effect::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      ellipse at center,
      transparent 50%,
      rgba(15, 56, 15, 0.15) 100%
    );
    pointer-events: none;
    z-index: 19;
  }
  
  /* Static Noise Effect */
  .static-effect {
    position: relative;
  }
  
  .static-effect::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
    pointer-events: none;
    opacity: 0.15;
    z-index: 18;
  }
  
  /* Custom scrollbar for codec interface */
  .codec-scroll::-webkit-scrollbar {
    width: 6px;
  }
  
  .codec-scroll::-webkit-scrollbar-track {
    background: #0f380f;
  }
  
  .codec-scroll::-webkit-scrollbar-thumb {
    background: #8bac0f;
  }

  /* Progress bars in frequency display */
  .progress-bars div {
    height: 6px;
    margin-bottom: 4px;
  }
  
  /* Active frequency state */
  .frequency-active {
    box-shadow: 0 0 10px #8bac0f, inset 0 0 5px #8bac0f;
  }
}

@layer components {
  /* MGS2 Style Buttons */
  .mgs-button {
    @apply px-2 py-1 border border-codec-mid rounded text-xs font-mono text-codec-light
           transition-all duration-150 bg-codec-dark;
  }
  
  .mgs-button:hover {
    @apply border-codec-highlight text-codec-highlight;
    box-shadow: 0 0 5px var(--codec-highlight), inset 0 0 2px var(--codec-highlight);
  }
  
  .mgs-button:active {
    @apply bg-codec-mid text-codec-dark;
  }
  
  /* "Connecting..." dots animation, like in MGS codec */
  .connecting-dots::after {
    content: '';
    animation: dots 2s infinite steps(4);
  }
  
  /* Line that appears before each dialogue in MGS codec */
  .codec-line {
    @apply relative pl-3;
  }
  
  .codec-line::before {
    content: '';
    @apply absolute left-0 top-0 h-full w-1 bg-codec-mid;
  }
  
  /* Pixelated transition effect */
  .codec-pixelate {
    image-rendering: pixelated;
  }
}

@layer utilities {
  /* Animation keyframes */
  @keyframes scanline {
    0% { transform: translateY(0); }
    100% { transform: translateY(100%); }
  }
  
  @keyframes static {
    0% { opacity: 0.4; }
    100% { opacity: 0.6; }
  }
  
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.3; }
  }
  
  @keyframes flicker {
    0%, 100% { opacity: 0.97; }
    33% { opacity: 0.95; }
    66% { opacity: 0.98; }
  }
  
  @keyframes dots {
    0% { content: ''; }
    25% { content: '.'; }
    50% { content: '..'; }
    75% { content: '...'; }
    100% { content: ''; }
  }
  
  @keyframes codec-ring {
    0%, 100% { transform: scale(1); opacity: 0.7; }
    50% { transform: scale(1.1); opacity: 1; }
  }
  
  @keyframes frequency-scan {
    0% { background-position: 0 0; }
    100% { background-position: 0 100%; }
  }
  
  @keyframes incoming-call {
    0%, 100% { border-color: var(--codec-mid); }
    50% { border-color: var(--codec-highlight); }
  }

  .animate-scanline {
    animation: scanline 8s linear infinite;
  }
  
  .animate-static {
    animation: static 0.5s steps(3) infinite;
  }
  
  .animate-blink {
    animation: blink 2s steps(2) infinite;
  }
  
  .animate-flicker {
    animation: flicker 5s linear infinite;
  }
  
  .animate-codec-ring {
    animation: codec-ring 1s ease-in-out infinite;
  }
  
  .animate-incoming-call {
    animation: incoming-call 0.8s ease-in-out infinite;
  }
  
  .animate-frequency-scan {
    background: linear-gradient(to bottom, 
      transparent, 
      rgba(139, 172, 15, 0.1),
      transparent
    );
    background-size: 100% 300%;
    animation: frequency-scan 3s linear infinite;
  }
}